[menu __main __control __startmacro]
type: command
name: Start macro
gcode:
    PRINT_START
    
[menu __main __control __qgl]
type: command
name: QGL
gcode:
    QUAD_GANTRY_LEVEL

[menu __main __octoprint __startm600]
type: command
name: Resume M600
gcode:	
	RESUME_MACRO

[menu __main __filament __unload]
type: command
name: Unload
gcode:
    UNLOAD
    
[menu __main __filament __loadfilament]
type: command
name: PURGE
gcode:
    LOAD_FILAMENT	

[menu __main __filament __qclean]
type: command
name: Quick clean
gcode:
    CLEAN
    
[menu __main __filament __clean]
type: command
name: Clean Nozzle
gcode:
    clean_nozzle
    
[menu __main __temp __chamber_target]
type: input
#name: {"Chamber:%3.0f (%4.0f)" % (menu.input, printer.chamber.temperature)}
enable: {'temperature_fan casefan' in printer}
name: Cha: {"%3.0f (%4.0f)" % (menu.input, printer['temperature_fan casefan'].temperature)}
input: {printer['temperature_fan casefan'].target}
input_min: 0
input_max: 60
input_step: 1
gcode: 
     M141 S{'%.0f' % menu.input}
	
[menu __main __light]
type: list
name: Lights

[menu __main __light __lightson]
type: command
name: Lights on
gcode:
	{% set svv = printer.save_variables.variables %}
	SET_LED LED=CASELIGHT RED={svv.red} GREEN={svv.green} BLUE={svv.blue} WHITE={svv.white} TRANSMIT=1

[menu __main __light __lightsoff]
type: command
name: Lights off
gcode:
	{% set svv = printer.save_variables.variables %}
	SET_LED LED=CASELIGHT RED=0 GREEN=0 BLUE=0 WHITE=0 TRANSMIT=1

[menu __main __light __justwhite]
type: input
name: WHITE: {"%3.0f"% (menu.input*100)}%
input: {printer.save_variables.variables.white}
input_min: 0
input_max: 1
input_step:0.1
gcode:
    SAVE_VARIABLE VARIABLE=white VALUE='{menu.input}'
    SAVE_VARIABLE VARIABLE=red VALUE='0'
    SAVE_VARIABLE VARIABLE=green VALUE='0'
	SAVE_VARIABLE VARIABLE=blue VALUE='0'
	{% set svv = printer.save_variables.variables %}
	SET_LED LED=CASELIGHT RED=0 GREEN=0 BLUE=0 WHITE='{menu.input}'
	
[menu __main __light __white]
type: input
#name: White: {menu.input*100}%
name: White: {"%3.0f"% (menu.input*100)}%
input: {printer.save_variables.variables.white}
input_min: 0
input_max: 1
input_step:0.1
gcode:
	SAVE_VARIABLE VARIABLE=white VALUE='{menu.input}'
	{% set svv = printer.save_variables.variables %}
	SET_LED LED=CASELIGHT RED={svv.red} GREEN={svv.green} BLUE={svv.blue} WHITE={menu.input}

[menu __main __light __red]
type: input
name: Red:   {"%3.0f"% (menu.input*100)}% 
input: {printer.save_variables.variables.red}
input_min: 0
input_max: 1
input_step:0.1
gcode:
	SAVE_VARIABLE VARIABLE=red VALUE='{menu.input}'
	{% set svv = printer.save_variables.variables %}
    SET_LED LED=CASELIGHT RED={menu.input} GREEN={svv.green} BLUE={svv.blue} WHITE={svv.white}    


[menu __main __light __green]
type: input
name: Green: {"%3.0f"% (menu.input*100)}%
input: {printer.save_variables.variables.green}
input_min: 0
input_max: 1
input_step:0.1
gcode:
	SAVE_VARIABLE VARIABLE=green VALUE='{menu.input}'
	{% set svv = printer.save_variables.variables %}
	SET_LED LED=CASELIGHT RED={svv.red} GREEN={menu.input} BLUE={svv.blue} WHITE={svv.white}

[menu __main __light __blue]
type: input
name: Blue:  {"%3.0f"% (menu.input*100)}%
input: {printer.save_variables.variables.blue}
input_min: 0
input_max: 1
input_step:0.1
gcode:
	SAVE_VARIABLE VARIABLE=blue VALUE='{menu.input}'
	{% set svv = printer.save_variables.variables %}
	SET_LED LED=CASELIGHT RED={svv.red} GREEN={svv.green} BLUE={menu.input} WHITE={svv.white}
	
[menu __main __filter]
type: list
enable: {'fan_generic filter' in printer}
name: Filter  {'%3d%s' % (printer['fan_generic filter'].speed*100,'%') if printer['fan_generic filter'].speed else 'OFF'}

[menu __main __filter __filteronoff]
type: input
name: Toggle: {'ON ' if menu.input else 'OFF'}
input: {printer['fan_generic filter'].speed}
input_min: 0
input_max: 1
input_step: 1
gcode: {% if menu.input %} _FILTER_ON {% else %} _SET_FILTER S=0.0 {% endif %}

[menu __main __filter __filterspeed]
type: input
name: Speed:  {'%3d%s' % (menu.input*100,'%') if menu.input else 'OFF'}
input: {printer['fan_generic filter'].speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode: 
    {% set svv = printer.save_variables.variables %}
    SAVE_VARIABLE VARIABLE=filter_s VALUE={menu.input}
    _SET_FILTER S={menu.input}
    #_SET_FILTER S={menu.input}
    